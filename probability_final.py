# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZhMGWDimaMJiO1ZacsGhd6TnsDDjBA0j
"""

# Commented out IPython magic to ensure Python compatibility.
# Load packages and dataset
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
sns.set_style('darkgrid')
# TODO
df = pd.read_csv('FILE_NAME')
df.head()
df_clean = df.copy()

plt.figure(figsize=(16, 12))
sns.heatmap(df_clean.drop('type', axis=1).corr(), cmap='YlGnBu', annot=True, fmt='.2f', vmin=0);

from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split

cols = ['type']
df_clean = df_clean.drop(cols, axis = 1)

X = df_clean
y = df['type']

scaler = MinMaxScaler()
scaler.fit(X)
X = scaler.transform(X)

import random
my_random = random.randint(1, 10)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=my_random)

from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# fit the model
clf_nb = GaussianNB()
clf_nb.fit(X_train, y_train)

pred_nb = clf_nb.predict(X_test)

# get the accuracy score
acc_nb = accuracy_score(pred_nb, y_test)
print(acc_nb)

a = [[0.1325, 0.277]]
pred_nb = clf_nb.predict(a)
print(pred_nb)